# ===============================
# = DATA SOURCE
# ===============================
# Connection url for the database
spring:
  datasource:
    classname: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/wheelsup
    username: 'wheelsupuser'
    password: 'WHEELSUP@!!2013'
    # Keep the connection alive if idle for a long time (needed in production)
    testWhileIdle: true
    validationQuery: SELECT 1

  # ===============================
  # = JPA / HIBERNATE
  # ===============================
  # Use spring.jpa.properties.* for Hibernate native properties (the prefix is
  # stripped before adding them to the entity manager).

  # Show or not log for each sql query
  jpa:
    show-sql: false
    # Hibernate ddl auto (create, create-drop, update): with "update" the database
    # schema will be automatically updated accordingly to java detail found in
    # the project
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

      properties:
        hibernate:
          dialect: org.hibernate.dialect.MySQL5Dialect
          cache:
            use_second_level_cache: true
            use_query_cache: true
            region:
              factory_class: org.hibernate.cache.ehcache.EhCacheRegionFactory
          jdbc:
            batch_size: 100
            #Set this property to true if your JDBC driver returns correct row counts from executeBatch(). It is usually safe to turn this option on
            batch_versioned_data: true
          #below property should be false in production, otherwise performance will be affected.
          generate_statistics: false
          order_inserts: true
          order_updates: true

server:
  port: 9005
  servlet:
    conext-path: /